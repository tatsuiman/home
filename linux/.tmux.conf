# prefixを<C-g>へ変更
set -g prefix C-w
# prefixを<C-b>から解除
unbind C-b

# マウス操作
# ドラッグするとコピーができます。
# Ctrl-w + ] でペーストできます。
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind-key -n WheelDownPane select-pane -t= \; send-keys -M

# デフォルトのシェルを設定
# zshを使う場合
#if-shell 'type zsh > /dev/null 2>&1' 'set -g default-shell /bin/zsh'
#set-option -g default-command "reattach-to-user-namespace -l /bin/zsh"
# bashを使う場合
#if-shell 'type bash > /dev/null 2>&1' 'set -g default-shell /usr/local/bin/bash'
#set-option -g default-command "reattach-to-user-namespace -l bash"

# 色がまともになるように設定
#set-option -g default-terminal screen-256color
#set-option -g terminal-overrides 'xterm:colors=256'

set-option -g history-limit 10000

# prefix r で設定ファイルをリロード
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# マウススクロールに対応
# set-window-option -g mode-mouse on

# prefix | でペインを横分割
bind-key | split-window -h -c "#{pane_current_path}"
# prefix - でペインを縦分割
bind-key - split-window -v -c "#{pane_current_path}"

# ペインの移動をhjklに設定
#bind-key h select-pane -L
#bind-key j select-pane -D
#bind-key k select-pane -U
#bind-key l select-pane -R
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
#bind-key h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
#bind-key j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
#bind-key k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
#bind-key l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# ウィンドウを１番から開始
set-option -g base-index 1
# ペインを１番から開始
set-window-option -g pane-base-index 1
# ステータスバーをUTF-8に対応（version 2.2以降は，このオプションが不要となった模様）
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.2\" | bc) = 1" "set-option -g status-utf8 on"
# ステータスバーの色を変更
set-option -g status-bg "colour238"
# ステータスバーを30秒毎に再描画
set-option -g status-interval 1
# ステータスバーを画面上部に表示
set-option -g status-position top
# ステータスバー右側の最大長さを設定
set-option -g status-right-length 90
# ステータスバー右側表示内容
set-option -g status-right "#[fg=cyan][%Y-%m-%d(%a) %H:%M:%S]"
# ステータスバー左側の最大長さを設定
set-option -g status-left-length 90
# ステータスバー左側表示内容
set-option -g status-left "#[fg=colour9]#H #[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
# ステータスバーをセンタリング
set-option -g status-justify centre
# カレントウィンドウ以外のウィンドウでの変化を通知
set-window-option -g monitor-activity on
# ヴィジュアルノーティフィケーション
set-window -g visual-activity on
# アクティブなウィンドウを強調
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright
# ペインボーダの色を設定
#set-option -g pane-border-fg green
#set-option -g pane-border-bg default
# アクティブなペインの強調
#set-option -g pane-active-border-fg white
#set-option -g pane-active-border-bg default

# キーバインドをViに設定
set-window-option -g mode-keys vi
# prefix v でコピーモード
bind-key v copy-mode \; display "Copy mode!"
# 選択開始
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy v begin-selection" "bind-key -T copy-mode-vi v send-keys -X begin-selection"
# 短形選択
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy C-v rectangle-toggle" "bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggl"
# １行選択
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy V select-line" "bind-key -T copy-mode-vi V send-keys -X select-line"
# y でヤンク
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy y copy-selection" "bind-key -T copy-mode-vi y send-keys -X copy-selection"
# Y で１行ヤンク
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy Y copy-line" "bind-key -T copy-mode-vi Y send-keys -X copy-line"
# prefix p でペースト
bind-key p paste-buffer
# バッファから選択してペースト
bind-key P choose-buffer
# コピーモードの選択を解除
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy Escape clear-selection" "bind-key -T copy-mode-vi Escape send-keys -X clear-selection"
# コピーモードでの前方検索
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy / search-forward" "bind-key -T copy-mode-vi / send-keys -X search-forward"
# コピーモードでの後方検索
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy ? search-backward" "bind-key -T copy-mode-vi ? send-keys -X search-backward"
# コピーモードでのページスクロール
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy C-b page-up" "bind-key -T copy-mode-vi C-b send-keys -X page-up"
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy C-f page-down" "bind-key -T copy-mode-vi C-f send-keys -X page-down"
# コピーモードでのページ送り
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy C-u scroll-up" "bind-key -T copy-mode-vi C-u send-keys -X scroll-up"
if-shell "test $(echo \"$(tmux -V | awk '{print $2;}') < 2.4\" | bc) = 1" "bind-key -t vi-copy C-d scroll-down" "bind-key -T copy-mode-vi C-d send-keys -X scroll-down"
